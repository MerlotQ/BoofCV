


def expand_power( m ):
    words = m.split("*")
    for idx,w in enumerate(words):
        if w.endswith("^2"):
            words[idx] = convert_name(w[:-2])+"*"+convert_name(w[:-2])
        else:
            words[idx] = convert_name(w)

    output = words[0]
    for w in words[1:]:
        output = output + "*" + w
    return output


def convert_name( input ):
    if input.startswith("P"):
        if input.endswith("i"):
            return "P.a"+input[1:3]
        else:
            return "R.a"+input[1:3]
    else:
        return input

def extract_coefficient( formula , variable ):
    forumals = formula.split(" + ")

    matches = [x.replace(variable,"") for x in forumals if x.endswith(variable)]
    if len(matches) == 0:
        # print("No matches for "+variable)
        return ""

    output = expand_power(matches[0])
    for m in matches[1:]:
        output = output + " + " + expand_power(m)
    return output


def symmetric_index( row , col ):
    row -= 1
    col -= 1
    if row == 0:
        return col
    elif row == 1:
        return 4+col-1
    elif row == 2:
        return 7+col-2
    elif row == 3:
        return 9+col-3
    else:
        print("EGads!")


def print_element( rowi , coli , rowj , colj , equation ):
    if not equation:
        return

    row = symmetric_index(rowi,coli)
    col = symmetric_index(rowj,colj)

    print("/* {:1d} {:1d} */A.data[{:2d}] = {};".format(row,col,(row*10+col),equation))


def print_matrix10( formula ):
    for rowi in range(1,5):
        for coli in range(rowi,5):
            for rowj in range(rowi,5):
                for colj in range(rowj,5):
                    # print("{}{} {}{}".format(rowi,coli,rowj,colj))
                    if rowi == rowj and coli == colj:
                        print_element(rowi,coli,rowj,colj,extract_coefficient(formula,"*Q"+str(rowi)+""+str(coli)+"^2"))
                    else:
                        print_element(rowi,coli,rowj,colj,extract_coefficient(formula,"*Q"+str(rowi)+""+str(coli)+"*Q"+str(rowj)+""+str(colj)))

I00J01 = "P11i^2*P11j*P21j*Q11^2 + 2*P11i*P11j*P12i*P21j*Q11*Q12 + P11i^2*P12j*P21j*Q11*Q12 + P11i^2*P11j*P22j*Q11*Q12 + 2*P11i*P12i*P12j*P21j*Q12^2 + 2*P11i*P11j*P12i*P22j*Q12^2 + 2*P11i*P11j*P13i*P21j*Q11*Q13 + P11i^2*P13j*P21j*Q11*Q13 + P11i^2*P11j*P23j*Q11*Q13 + 2*P11i*P12j*P13i*P21j*Q12*Q13 + 2*P11i*P12i*P13j*P21j*Q12*Q13 + 2*P11i*P11j*P13i*P22j*Q12*Q13 + 2*P11i*P11j*P12i*P23j*Q12*Q13 + 2*P11i*P13i*P13j*P21j*Q13^2 + 2*P11i*P11j*P13i*P23j*Q13^2 + 2*P11i*P11j*P14i*P21j*Q11*Q14 + P11i^2*P14j*P21j*Q11*Q14 + P11i^2*P11j*P24j*Q11*Q14 + 2*P11i*P12j*P14i*P21j*Q12*Q14 + 2*P11i*P12i*P14j*P21j*Q12*Q14 + 2*P11i*P11j*P14i*P22j*Q12*Q14 + 2*P11i*P11j*P12i*P24j*Q12*Q14 + 2*P11i*P13j*P14i*P21j*Q13*Q14 + 2*P11i*P13i*P14j*P21j*Q13*Q14 + 2*P11i*P11j*P14i*P23j*Q13*Q14 + 2*P11i*P11j*P13i*P24j*Q13*Q14 + 2*P11i*P14i*P14j*P21j*Q14^2 + 2*P11i*P11j*P14i*P24j*Q14^2 + P11j*P12i^2*P21j*Q11*Q22 + P11i^2*P12j*P22j*Q11*Q22 + P12i^2*P12j*P21j*Q12*Q22 + P11j*P12i^2*P22j*Q12*Q22 + 2*P11i*P12i*P12j*P22j*Q12*Q22 + P12i^2*P13j*P21j*Q13*Q22 + 2*P11i*P12j*P13i*P22j*Q13*Q22 + P11j*P12i^2*P23j*Q13*Q22 + P12i^2*P14j*P21j*Q14*Q22 + 2*P11i*P12j*P14i*P22j*Q14*Q22 + P11j*P12i^2*P24j*Q14*Q22 + P12i^2*P12j*P22j*Q22^2 + 2*P11j*P12i*P13i*P21j*Q11*Q23 + P11i^2*P13j*P22j*Q11*Q23 + P11i^2*P12j*P23j*Q11*Q23 + 2*P12i*P12j*P13i*P21j*Q12*Q23 + 2*P11j*P12i*P13i*P22j*Q12*Q23 + 2*P11i*P12i*P13j*P22j*Q12*Q23 + 2*P11i*P12i*P12j*P23j*Q12*Q23 + 2*P12i*P13i*P13j*P21j*Q13*Q23 + 2*P11i*P13i*P13j*P22j*Q13*Q23 + 2*P11j*P12i*P13i*P23j*Q13*Q23 + 2*P11i*P12j*P13i*P23j*Q13*Q23 + 2*P12i*P13i*P14j*P21j*Q14*Q23 + 2*P11i*P13j*P14i*P22j*Q14*Q23 + 2*P11i*P12j*P14i*P23j*Q14*Q23 + 2*P11j*P12i*P13i*P24j*Q14*Q23 + 2*P12i*P12j*P13i*P22j*Q22*Q23 + P12i^2*P13j*P22j*Q22*Q23 + P12i^2*P12j*P23j*Q22*Q23 + 2*P12i*P13i*P13j*P22j*Q23^2 + 2*P12i*P12j*P13i*P23j*Q23^2 + 2*P11j*P12i*P14i*P21j*Q11*Q24 + P11i^2*P14j*P22j*Q11*Q24 + P11i^2*P12j*P24j*Q11*Q24 + 2*P12i*P12j*P14i*P21j*Q12*Q24 + 2*P11j*P12i*P14i*P22j*Q12*Q24 + 2*P11i*P12i*P14j*P22j*Q12*Q24 + 2*P11i*P12i*P12j*P24j*Q12*Q24 + 2*P12i*P13j*P14i*P21j*Q13*Q24 + 2*P11i*P13i*P14j*P22j*Q13*Q24 + 2*P11j*P12i*P14i*P23j*Q13*Q24 + 2*P11i*P12j*P13i*P24j*Q13*Q24 + 2*P12i*P14i*P14j*P21j*Q14*Q24 + 2*P11i*P14i*P14j*P22j*Q14*Q24 + 2*P11j*P12i*P14i*P24j*Q14*Q24 + 2*P11i*P12j*P14i*P24j*Q14*Q24 + 2*P12i*P12j*P14i*P22j*Q22*Q24 + P12i^2*P14j*P22j*Q22*Q24 + P12i^2*P12j*P24j*Q22*Q24 + 2*P12i*P13j*P14i*P22j*Q23*Q24 + 2*P12i*P13i*P14j*P22j*Q23*Q24 + 2*P12i*P12j*P14i*P23j*Q23*Q24 + 2*P12i*P12j*P13i*P24j*Q23*Q24 + 2*P12i*P14i*P14j*P22j*Q24^2 + 2*P12i*P12j*P14i*P24j*Q24^2 + P11j*P13i^2*P21j*Q11*Q33 + P11i^2*P13j*P23j*Q11*Q33 + P12j*P13i^2*P21j*Q12*Q33 + P11j*P13i^2*P22j*Q12*Q33 + 2*P11i*P12i*P13j*P23j*Q12*Q33 + P13i^2*P13j*P21j*Q13*Q33 + P11j*P13i^2*P23j*Q13*Q33 + 2*P11i*P13i*P13j*P23j*Q13*Q33 + P13i^2*P14j*P21j*Q14*Q33 + 2*P11i*P13j*P14i*P23j*Q14*Q33 + P11j*P13i^2*P24j*Q14*Q33 + P12j*P13i^2*P22j*Q22*Q33 + P12i^2*P13j*P23j*Q22*Q33 + P13i^2*P13j*P22j*Q23*Q33 + P12j*P13i^2*P23j*Q23*Q33 + 2*P12i*P13i*P13j*P23j*Q23*Q33 + P13i^2*P14j*P22j*Q24*Q33 + 2*P12i*P13j*P14i*P23j*Q24*Q33 + P12j*P13i^2*P24j*Q24*Q33 + P13i^2*P13j*P23j*Q33^2 + 2*P11j*P13i*P14i*P21j*Q11*Q34 + P11i^2*P14j*P23j*Q11*Q34 + P11i^2*P13j*P24j*Q11*Q34 + 2*P12j*P13i*P14i*P21j*Q12*Q34 + 2*P11j*P13i*P14i*P22j*Q12*Q34 + 2*P11i*P12i*P14j*P23j*Q12*Q34 + 2*P11i*P12i*P13j*P24j*Q12*Q34 + 2*P13i*P13j*P14i*P21j*Q13*Q34 + 2*P11j*P13i*P14i*P23j*Q13*Q34 + 2*P11i*P13i*P14j*P23j*Q13*Q34 + 2*P11i*P13i*P13j*P24j*Q13*Q34 + 2*P13i*P14i*P14j*P21j*Q14*Q34 + 2*P11i*P14i*P14j*P23j*Q14*Q34 + 2*P11j*P13i*P14i*P24j*Q14*Q34 + 2*P11i*P13j*P14i*P24j*Q14*Q34 + 2*P12j*P13i*P14i*P22j*Q22*Q34 + P12i^2*P14j*P23j*Q22*Q34 + P12i^2*P13j*P24j*Q22*Q34 + 2*P13i*P13j*P14i*P22j*Q23*Q34 + 2*P12j*P13i*P14i*P23j*Q23*Q34 + 2*P12i*P13i*P14j*P23j*Q23*Q34 + 2*P12i*P13i*P13j*P24j*Q23*Q34 + 2*P13i*P14i*P14j*P22j*Q24*Q34 + 2*P12i*P14i*P14j*P23j*Q24*Q34 + 2*P12j*P13i*P14i*P24j*Q24*Q34 + 2*P12i*P13j*P14i*P24j*Q24*Q34 + 2*P13i*P13j*P14i*P23j*Q33*Q34 + P13i^2*P14j*P23j*Q33*Q34 + P13i^2*P13j*P24j*Q33*Q34 + 2*P13i*P14i*P14j*P23j*Q34^2 + 2*P13i*P13j*P14i*P24j*Q34^2 + P11j*P14i^2*P21j*Q11*Q44 + P11i^2*P14j*P24j*Q11*Q44 + P12j*P14i^2*P21j*Q12*Q44 + P11j*P14i^2*P22j*Q12*Q44 + 2*P11i*P12i*P14j*P24j*Q12*Q44 + P13j*P14i^2*P21j*Q13*Q44 + P11j*P14i^2*P23j*Q13*Q44 + 2*P11i*P13i*P14j*P24j*Q13*Q44 + P14i^2*P14j*P21j*Q14*Q44 + P11j*P14i^2*P24j*Q14*Q44 + 2*P11i*P14i*P14j*P24j*Q14*Q44 + P12j*P14i^2*P22j*Q22*Q44 + P12i^2*P14j*P24j*Q22*Q44 + P13j*P14i^2*P22j*Q23*Q44 + P12j*P14i^2*P23j*Q23*Q44 + 2*P12i*P13i*P14j*P24j*Q23*Q44 + P14i^2*P14j*P22j*Q24*Q44 + P12j*P14i^2*P24j*Q24*Q44 + 2*P12i*P14i*P14j*P24j*Q24*Q44 + P13j*P14i^2*P23j*Q33*Q44 + P13i^2*P14j*P24j*Q33*Q44 + P14i^2*P14j*P23j*Q34*Q44 + P13j*P14i^2*P24j*Q34*Q44 + 2*P13i*P14i*P14j*P24j*Q34*Q44 + P14i^2*P14j*P24j*Q44^2"
I01J02 = "P11i*P11j*P21i*P31j*Q11^2 + P11j*P12i*P21i*P31j*Q11*Q12 + P11i*P12j*P21i*P31j*Q11*Q12 + P11i*P11j*P22i*P31j*Q11*Q12 + P11i*P11j*P21i*P32j*Q11*Q12 + P12i*P12j*P21i*P31j*Q12^2 + P11i*P12j*P22i*P31j*Q12^2 + P11j*P12i*P21i*P32j*Q12^2 + P11i*P11j*P22i*P32j*Q12^2 + P11j*P13i*P21i*P31j*Q11*Q13 + P11i*P13j*P21i*P31j*Q11*Q13 + P11i*P11j*P23i*P31j*Q11*Q13 + P11i*P11j*P21i*P33j*Q11*Q13 + P12j*P13i*P21i*P31j*Q12*Q13 + P12i*P13j*P21i*P31j*Q12*Q13 + P11i*P13j*P22i*P31j*Q12*Q13 + P11i*P12j*P23i*P31j*Q12*Q13 + P11j*P13i*P21i*P32j*Q12*Q13 + P11i*P11j*P23i*P32j*Q12*Q13 + P11j*P12i*P21i*P33j*Q12*Q13 + P11i*P11j*P22i*P33j*Q12*Q13 + P13i*P13j*P21i*P31j*Q13^2 + P11i*P13j*P23i*P31j*Q13^2 + P11j*P13i*P21i*P33j*Q13^2 + P11i*P11j*P23i*P33j*Q13^2 + P11j*P14i*P21i*P31j*Q11*Q14 + P11i*P14j*P21i*P31j*Q11*Q14 + P11i*P11j*P24i*P31j*Q11*Q14 + P11i*P11j*P21i*P34j*Q11*Q14 + P12j*P14i*P21i*P31j*Q12*Q14 + P12i*P14j*P21i*P31j*Q12*Q14 + P11i*P14j*P22i*P31j*Q12*Q14 + P11i*P12j*P24i*P31j*Q12*Q14 + P11j*P14i*P21i*P32j*Q12*Q14 + P11i*P11j*P24i*P32j*Q12*Q14 + P11j*P12i*P21i*P34j*Q12*Q14 + P11i*P11j*P22i*P34j*Q12*Q14 + P13j*P14i*P21i*P31j*Q13*Q14 + P13i*P14j*P21i*P31j*Q13*Q14 + P11i*P14j*P23i*P31j*Q13*Q14 + P11i*P13j*P24i*P31j*Q13*Q14 + P11j*P14i*P21i*P33j*Q13*Q14 + P11i*P11j*P24i*P33j*Q13*Q14 + P11j*P13i*P21i*P34j*Q13*Q14 + P11i*P11j*P23i*P34j*Q13*Q14 + P14i*P14j*P21i*P31j*Q14^2 + P11i*P14j*P24i*P31j*Q14^2 + P11j*P14i*P21i*P34j*Q14^2 + P11i*P11j*P24i*P34j*Q14^2 + P11j*P12i*P22i*P31j*Q11*Q22 + P11i*P12j*P21i*P32j*Q11*Q22 + P12i*P12j*P22i*P31j*Q12*Q22 + P12i*P12j*P21i*P32j*Q12*Q22 + P11j*P12i*P22i*P32j*Q12*Q22 + P11i*P12j*P22i*P32j*Q12*Q22 + P12i*P13j*P22i*P31j*Q13*Q22 + P12j*P13i*P21i*P32j*Q13*Q22 + P11i*P12j*P23i*P32j*Q13*Q22 + P11j*P12i*P22i*P33j*Q13*Q22 + P12i*P14j*P22i*P31j*Q14*Q22 + P12j*P14i*P21i*P32j*Q14*Q22 + P11i*P12j*P24i*P32j*Q14*Q22 + P11j*P12i*P22i*P34j*Q14*Q22 + P12i*P12j*P22i*P32j*Q22^2 + P11j*P13i*P22i*P31j*Q11*Q23 + P11j*P12i*P23i*P31j*Q11*Q23 + P11i*P13j*P21i*P32j*Q11*Q23 + P11i*P12j*P21i*P33j*Q11*Q23 + P12j*P13i*P22i*P31j*Q12*Q23 + P12i*P12j*P23i*P31j*Q12*Q23 + P12i*P13j*P21i*P32j*Q12*Q23 + P11j*P13i*P22i*P32j*Q12*Q23 + P11i*P13j*P22i*P32j*Q12*Q23 + P11j*P12i*P23i*P32j*Q12*Q23 + P12i*P12j*P21i*P33j*Q12*Q23 + P11i*P12j*P22i*P33j*Q12*Q23 + P13i*P13j*P22i*P31j*Q13*Q23 + P12i*P13j*P23i*P31j*Q13*Q23 + P13i*P13j*P21i*P32j*Q13*Q23 + P11i*P13j*P23i*P32j*Q13*Q23 + P12j*P13i*P21i*P33j*Q13*Q23 + P11j*P13i*P22i*P33j*Q13*Q23 + P11j*P12i*P23i*P33j*Q13*Q23 + P11i*P12j*P23i*P33j*Q13*Q23 + P13i*P14j*P22i*P31j*Q14*Q23 + P12i*P14j*P23i*P31j*Q14*Q23 + P13j*P14i*P21i*P32j*Q14*Q23 + P11i*P13j*P24i*P32j*Q14*Q23 + P12j*P14i*P21i*P33j*Q14*Q23 + P11i*P12j*P24i*P33j*Q14*Q23 + P11j*P13i*P22i*P34j*Q14*Q23 + P11j*P12i*P23i*P34j*Q14*Q23 + P12j*P13i*P22i*P32j*Q22*Q23 + P12i*P13j*P22i*P32j*Q22*Q23 + P12i*P12j*P23i*P32j*Q22*Q23 + P12i*P12j*P22i*P33j*Q22*Q23 + P13i*P13j*P22i*P32j*Q23^2 + P12i*P13j*P23i*P32j*Q23^2 + P12j*P13i*P22i*P33j*Q23^2 + P12i*P12j*P23i*P33j*Q23^2 + P11j*P14i*P22i*P31j*Q11*Q24 + P11j*P12i*P24i*P31j*Q11*Q24 + P11i*P14j*P21i*P32j*Q11*Q24 + P11i*P12j*P21i*P34j*Q11*Q24 + P12j*P14i*P22i*P31j*Q12*Q24 + P12i*P12j*P24i*P31j*Q12*Q24 + P12i*P14j*P21i*P32j*Q12*Q24 + P11j*P14i*P22i*P32j*Q12*Q24 + P11i*P14j*P22i*P32j*Q12*Q24 + P11j*P12i*P24i*P32j*Q12*Q24 + P12i*P12j*P21i*P34j*Q12*Q24 + P11i*P12j*P22i*P34j*Q12*Q24 + P13j*P14i*P22i*P31j*Q13*Q24 + P12i*P13j*P24i*P31j*Q13*Q24 + P13i*P14j*P21i*P32j*Q13*Q24 + P11i*P14j*P23i*P32j*Q13*Q24 + P11j*P14i*P22i*P33j*Q13*Q24 + P11j*P12i*P24i*P33j*Q13*Q24 + P12j*P13i*P21i*P34j*Q13*Q24 + P11i*P12j*P23i*P34j*Q13*Q24 + P14i*P14j*P22i*P31j*Q14*Q24 + P12i*P14j*P24i*P31j*Q14*Q24 + P14i*P14j*P21i*P32j*Q14*Q24 + P11i*P14j*P24i*P32j*Q14*Q24 + P12j*P14i*P21i*P34j*Q14*Q24 + P11j*P14i*P22i*P34j*Q14*Q24 + P11j*P12i*P24i*P34j*Q14*Q24 + P11i*P12j*P24i*P34j*Q14*Q24 + P12j*P14i*P22i*P32j*Q22*Q24 + P12i*P14j*P22i*P32j*Q22*Q24 + P12i*P12j*P24i*P32j*Q22*Q24 + P12i*P12j*P22i*P34j*Q22*Q24 + P13j*P14i*P22i*P32j*Q23*Q24 + P13i*P14j*P22i*P32j*Q23*Q24 + P12i*P14j*P23i*P32j*Q23*Q24 + P12i*P13j*P24i*P32j*Q23*Q24 + P12j*P14i*P22i*P33j*Q23*Q24 + P12i*P12j*P24i*P33j*Q23*Q24 + P12j*P13i*P22i*P34j*Q23*Q24 + P12i*P12j*P23i*P34j*Q23*Q24 + P14i*P14j*P22i*P32j*Q24^2 + P12i*P14j*P24i*P32j*Q24^2 + P12j*P14i*P22i*P34j*Q24^2 + P12i*P12j*P24i*P34j*Q24^2 + P11j*P13i*P23i*P31j*Q11*Q33 + P11i*P13j*P21i*P33j*Q11*Q33 + P12j*P13i*P23i*P31j*Q12*Q33 + P11j*P13i*P23i*P32j*Q12*Q33 + P12i*P13j*P21i*P33j*Q12*Q33 + P11i*P13j*P22i*P33j*Q12*Q33 + P13i*P13j*P23i*P31j*Q13*Q33 + P13i*P13j*P21i*P33j*Q13*Q33 + P11j*P13i*P23i*P33j*Q13*Q33 + P11i*P13j*P23i*P33j*Q13*Q33 + P13i*P14j*P23i*P31j*Q14*Q33 + P13j*P14i*P21i*P33j*Q14*Q33 + P11i*P13j*P24i*P33j*Q14*Q33 + P11j*P13i*P23i*P34j*Q14*Q33 + P12j*P13i*P23i*P32j*Q22*Q33 + P12i*P13j*P22i*P33j*Q22*Q33 + P13i*P13j*P23i*P32j*Q23*Q33 + P13i*P13j*P22i*P33j*Q23*Q33 + P12j*P13i*P23i*P33j*Q23*Q33 + P12i*P13j*P23i*P33j*Q23*Q33 + P13i*P14j*P23i*P32j*Q24*Q33 + P13j*P14i*P22i*P33j*Q24*Q33 + P12i*P13j*P24i*P33j*Q24*Q33 + P12j*P13i*P23i*P34j*Q24*Q33 + P13i*P13j*P23i*P33j*Q33^2 + P11j*P14i*P23i*P31j*Q11*Q34 + P11j*P13i*P24i*P31j*Q11*Q34 + P11i*P14j*P21i*P33j*Q11*Q34 + P11i*P13j*P21i*P34j*Q11*Q34 + P12j*P14i*P23i*P31j*Q12*Q34 + P12j*P13i*P24i*P31j*Q12*Q34 + P11j*P14i*P23i*P32j*Q12*Q34 + P11j*P13i*P24i*P32j*Q12*Q34 + P12i*P14j*P21i*P33j*Q12*Q34 + P11i*P14j*P22i*P33j*Q12*Q34 + P12i*P13j*P21i*P34j*Q12*Q34 + P11i*P13j*P22i*P34j*Q12*Q34 + P13j*P14i*P23i*P31j*Q13*Q34 + P13i*P13j*P24i*P31j*Q13*Q34 + P13i*P14j*P21i*P33j*Q13*Q34 + P11j*P14i*P23i*P33j*Q13*Q34 + P11i*P14j*P23i*P33j*Q13*Q34 + P11j*P13i*P24i*P33j*Q13*Q34 + P13i*P13j*P21i*P34j*Q13*Q34 + P11i*P13j*P23i*P34j*Q13*Q34 + P14i*P14j*P23i*P31j*Q14*Q34 + P13i*P14j*P24i*P31j*Q14*Q34 + P14i*P14j*P21i*P33j*Q14*Q34 + P11i*P14j*P24i*P33j*Q14*Q34 + P13j*P14i*P21i*P34j*Q14*Q34 + P11j*P14i*P23i*P34j*Q14*Q34 + P11j*P13i*P24i*P34j*Q14*Q34 + P11i*P13j*P24i*P34j*Q14*Q34 + P12j*P14i*P23i*P32j*Q22*Q34 + P12j*P13i*P24i*P32j*Q22*Q34 + P12i*P14j*P22i*P33j*Q22*Q34 + P12i*P13j*P22i*P34j*Q22*Q34 + P13j*P14i*P23i*P32j*Q23*Q34 + P13i*P13j*P24i*P32j*Q23*Q34 + P13i*P14j*P22i*P33j*Q23*Q34 + P12j*P14i*P23i*P33j*Q23*Q34 + P12i*P14j*P23i*P33j*Q23*Q34 + P12j*P13i*P24i*P33j*Q23*Q34 + P13i*P13j*P22i*P34j*Q23*Q34 + P12i*P13j*P23i*P34j*Q23*Q34 + P14i*P14j*P23i*P32j*Q24*Q34 + P13i*P14j*P24i*P32j*Q24*Q34 + P14i*P14j*P22i*P33j*Q24*Q34 + P12i*P14j*P24i*P33j*Q24*Q34 + P13j*P14i*P22i*P34j*Q24*Q34 + P12j*P14i*P23i*P34j*Q24*Q34 + P12j*P13i*P24i*P34j*Q24*Q34 + P12i*P13j*P24i*P34j*Q24*Q34 + P13j*P14i*P23i*P33j*Q33*Q34 + P13i*P14j*P23i*P33j*Q33*Q34 + P13i*P13j*P24i*P33j*Q33*Q34 + P13i*P13j*P23i*P34j*Q33*Q34 + P14i*P14j*P23i*P33j*Q34^2 + P13i*P14j*P24i*P33j*Q34^2 + P13j*P14i*P23i*P34j*Q34^2 + P13i*P13j*P24i*P34j*Q34^2 + P11j*P14i*P24i*P31j*Q11*Q44 + P11i*P14j*P21i*P34j*Q11*Q44 + P12j*P14i*P24i*P31j*Q12*Q44 + P11j*P14i*P24i*P32j*Q12*Q44 + P12i*P14j*P21i*P34j*Q12*Q44 + P11i*P14j*P22i*P34j*Q12*Q44 + P13j*P14i*P24i*P31j*Q13*Q44 + P11j*P14i*P24i*P33j*Q13*Q44 + P13i*P14j*P21i*P34j*Q13*Q44 + P11i*P14j*P23i*P34j*Q13*Q44 + P14i*P14j*P24i*P31j*Q14*Q44 + P14i*P14j*P21i*P34j*Q14*Q44 + P11j*P14i*P24i*P34j*Q14*Q44 + P11i*P14j*P24i*P34j*Q14*Q44 + P12j*P14i*P24i*P32j*Q22*Q44 + P12i*P14j*P22i*P34j*Q22*Q44 + P13j*P14i*P24i*P32j*Q23*Q44 + P12j*P14i*P24i*P33j*Q23*Q44 + P13i*P14j*P22i*P34j*Q23*Q44 + P12i*P14j*P23i*P34j*Q23*Q44 + P14i*P14j*P24i*P32j*Q24*Q44 + P14i*P14j*P22i*P34j*Q24*Q44 + P12j*P14i*P24i*P34j*Q24*Q44 + P12i*P14j*P24i*P34j*Q24*Q44 + P13j*P14i*P24i*P33j*Q33*Q44 + P13i*P14j*P23i*P34j*Q33*Q44 + P14i*P14j*P24i*P33j*Q34*Q44 + P14i*P14j*P23i*P34j*Q34*Q44 + P13j*P14i*P24i*P34j*Q34*Q44 + P13i*P14j*P24i*P34j*Q34*Q44 + P14i*P14j*P24i*P34j*Q44^2"
I02J11 = "P11i*P21j^2*P31i*Q11^2 + P12i*P21j^2*P31i*Q11*Q12 + 2*P11i*P21j*P22j*P31i*Q11*Q12 + P11i*P21j^2*P32i*Q11*Q12 + 2*P12i*P21j*P22j*P31i*Q12^2 + 2*P11i*P21j*P22j*P32i*Q12^2 + P13i*P21j^2*P31i*Q11*Q13 + 2*P11i*P21j*P23j*P31i*Q11*Q13 + P11i*P21j^2*P33i*Q11*Q13 + 2*P13i*P21j*P22j*P31i*Q12*Q13 + 2*P12i*P21j*P23j*P31i*Q12*Q13 + 2*P11i*P21j*P23j*P32i*Q12*Q13 + 2*P11i*P21j*P22j*P33i*Q12*Q13 + 2*P13i*P21j*P23j*P31i*Q13^2 + 2*P11i*P21j*P23j*P33i*Q13^2 + P14i*P21j^2*P31i*Q11*Q14 + 2*P11i*P21j*P24j*P31i*Q11*Q14 + P11i*P21j^2*P34i*Q11*Q14 + 2*P14i*P21j*P22j*P31i*Q12*Q14 + 2*P12i*P21j*P24j*P31i*Q12*Q14 + 2*P11i*P21j*P24j*P32i*Q12*Q14 + 2*P11i*P21j*P22j*P34i*Q12*Q14 + 2*P14i*P21j*P23j*P31i*Q13*Q14 + 2*P13i*P21j*P24j*P31i*Q13*Q14 + 2*P11i*P21j*P24j*P33i*Q13*Q14 + 2*P11i*P21j*P23j*P34i*Q13*Q14 + 2*P14i*P21j*P24j*P31i*Q14^2 + 2*P11i*P21j*P24j*P34i*Q14^2 + P11i*P22j^2*P31i*Q11*Q22 + P12i*P21j^2*P32i*Q11*Q22 + P12i*P22j^2*P31i*Q12*Q22 + 2*P12i*P21j*P22j*P32i*Q12*Q22 + P11i*P22j^2*P32i*Q12*Q22 + P13i*P22j^2*P31i*Q13*Q22 + 2*P12i*P21j*P23j*P32i*Q13*Q22 + P11i*P22j^2*P33i*Q13*Q22 + P14i*P22j^2*P31i*Q14*Q22 + 2*P12i*P21j*P24j*P32i*Q14*Q22 + P11i*P22j^2*P34i*Q14*Q22 + P12i*P22j^2*P32i*Q22^2 + 2*P11i*P22j*P23j*P31i*Q11*Q23 + P13i*P21j^2*P32i*Q11*Q23 + P12i*P21j^2*P33i*Q11*Q23 + 2*P12i*P22j*P23j*P31i*Q12*Q23 + 2*P13i*P21j*P22j*P32i*Q12*Q23 + 2*P11i*P22j*P23j*P32i*Q12*Q23 + 2*P12i*P21j*P22j*P33i*Q12*Q23 + 2*P13i*P22j*P23j*P31i*Q13*Q23 + 2*P13i*P21j*P23j*P32i*Q13*Q23 + 2*P12i*P21j*P23j*P33i*Q13*Q23 + 2*P11i*P22j*P23j*P33i*Q13*Q23 + 2*P14i*P22j*P23j*P31i*Q14*Q23 + 2*P13i*P21j*P24j*P32i*Q14*Q23 + 2*P12i*P21j*P24j*P33i*Q14*Q23 + 2*P11i*P22j*P23j*P34i*Q14*Q23 + P13i*P22j^2*P32i*Q22*Q23 + 2*P12i*P22j*P23j*P32i*Q22*Q23 + P12i*P22j^2*P33i*Q22*Q23 + 2*P13i*P22j*P23j*P32i*Q23^2 + 2*P12i*P22j*P23j*P33i*Q23^2 + 2*P11i*P22j*P24j*P31i*Q11*Q24 + P14i*P21j^2*P32i*Q11*Q24 + P12i*P21j^2*P34i*Q11*Q24 + 2*P12i*P22j*P24j*P31i*Q12*Q24 + 2*P14i*P21j*P22j*P32i*Q12*Q24 + 2*P11i*P22j*P24j*P32i*Q12*Q24 + 2*P12i*P21j*P22j*P34i*Q12*Q24 + 2*P13i*P22j*P24j*P31i*Q13*Q24 + 2*P14i*P21j*P23j*P32i*Q13*Q24 + 2*P11i*P22j*P24j*P33i*Q13*Q24 + 2*P12i*P21j*P23j*P34i*Q13*Q24 + 2*P14i*P22j*P24j*P31i*Q14*Q24 + 2*P14i*P21j*P24j*P32i*Q14*Q24 + 2*P12i*P21j*P24j*P34i*Q14*Q24 + 2*P11i*P22j*P24j*P34i*Q14*Q24 + P14i*P22j^2*P32i*Q22*Q24 + 2*P12i*P22j*P24j*P32i*Q22*Q24 + P12i*P22j^2*P34i*Q22*Q24 + 2*P14i*P22j*P23j*P32i*Q23*Q24 + 2*P13i*P22j*P24j*P32i*Q23*Q24 + 2*P12i*P22j*P24j*P33i*Q23*Q24 + 2*P12i*P22j*P23j*P34i*Q23*Q24 + 2*P14i*P22j*P24j*P32i*Q24^2 + 2*P12i*P22j*P24j*P34i*Q24^2 + P11i*P23j^2*P31i*Q11*Q33 + P13i*P21j^2*P33i*Q11*Q33 + P12i*P23j^2*P31i*Q12*Q33 + P11i*P23j^2*P32i*Q12*Q33 + 2*P13i*P21j*P22j*P33i*Q12*Q33 + P13i*P23j^2*P31i*Q13*Q33 + 2*P13i*P21j*P23j*P33i*Q13*Q33 + P11i*P23j^2*P33i*Q13*Q33 + P14i*P23j^2*P31i*Q14*Q33 + 2*P13i*P21j*P24j*P33i*Q14*Q33 + P11i*P23j^2*P34i*Q14*Q33 + P12i*P23j^2*P32i*Q22*Q33 + P13i*P22j^2*P33i*Q22*Q33 + P13i*P23j^2*P32i*Q23*Q33 + 2*P13i*P22j*P23j*P33i*Q23*Q33 + P12i*P23j^2*P33i*Q23*Q33 + P14i*P23j^2*P32i*Q24*Q33 + 2*P13i*P22j*P24j*P33i*Q24*Q33 + P12i*P23j^2*P34i*Q24*Q33 + P13i*P23j^2*P33i*Q33^2 + 2*P11i*P23j*P24j*P31i*Q11*Q34 + P14i*P21j^2*P33i*Q11*Q34 + P13i*P21j^2*P34i*Q11*Q34 + 2*P12i*P23j*P24j*P31i*Q12*Q34 + 2*P11i*P23j*P24j*P32i*Q12*Q34 + 2*P14i*P21j*P22j*P33i*Q12*Q34 + 2*P13i*P21j*P22j*P34i*Q12*Q34 + 2*P13i*P23j*P24j*P31i*Q13*Q34 + 2*P14i*P21j*P23j*P33i*Q13*Q34 + 2*P11i*P23j*P24j*P33i*Q13*Q34 + 2*P13i*P21j*P23j*P34i*Q13*Q34 + 2*P14i*P23j*P24j*P31i*Q14*Q34 + 2*P14i*P21j*P24j*P33i*Q14*Q34 + 2*P13i*P21j*P24j*P34i*Q14*Q34 + 2*P11i*P23j*P24j*P34i*Q14*Q34 + 2*P12i*P23j*P24j*P32i*Q22*Q34 + P14i*P22j^2*P33i*Q22*Q34 + P13i*P22j^2*P34i*Q22*Q34 + 2*P13i*P23j*P24j*P32i*Q23*Q34 + 2*P14i*P22j*P23j*P33i*Q23*Q34 + 2*P12i*P23j*P24j*P33i*Q23*Q34 + 2*P13i*P22j*P23j*P34i*Q23*Q34 + 2*P14i*P23j*P24j*P32i*Q24*Q34 + 2*P14i*P22j*P24j*P33i*Q24*Q34 + 2*P13i*P22j*P24j*P34i*Q24*Q34 + 2*P12i*P23j*P24j*P34i*Q24*Q34 + P14i*P23j^2*P33i*Q33*Q34 + 2*P13i*P23j*P24j*P33i*Q33*Q34 + P13i*P23j^2*P34i*Q33*Q34 + 2*P14i*P23j*P24j*P33i*Q34^2 + 2*P13i*P23j*P24j*P34i*Q34^2 + P11i*P24j^2*P31i*Q11*Q44 + P14i*P21j^2*P34i*Q11*Q44 + P12i*P24j^2*P31i*Q12*Q44 + P11i*P24j^2*P32i*Q12*Q44 + 2*P14i*P21j*P22j*P34i*Q12*Q44 + P13i*P24j^2*P31i*Q13*Q44 + P11i*P24j^2*P33i*Q13*Q44 + 2*P14i*P21j*P23j*P34i*Q13*Q44 + P14i*P24j^2*P31i*Q14*Q44 + 2*P14i*P21j*P24j*P34i*Q14*Q44 + P11i*P24j^2*P34i*Q14*Q44 + P12i*P24j^2*P32i*Q22*Q44 + P14i*P22j^2*P34i*Q22*Q44 + P13i*P24j^2*P32i*Q23*Q44 + P12i*P24j^2*P33i*Q23*Q44 + 2*P14i*P22j*P23j*P34i*Q23*Q44 + P14i*P24j^2*P32i*Q24*Q44 + 2*P14i*P22j*P24j*P34i*Q24*Q44 + P12i*P24j^2*P34i*Q24*Q44 + P13i*P24j^2*P33i*Q33*Q44 + P14i*P23j^2*P34i*Q33*Q44 + P14i*P24j^2*P33i*Q34*Q44 + 2*P14i*P23j*P24j*P34i*Q34*Q44 + P13i*P24j^2*P34i*Q34*Q44 + P14i*P24j^2*P34i*Q44^2"
I11J12 = "P21i^2*P21j*P31j*Q11^2 + 2*P21i*P21j*P22i*P31j*Q11*Q12 + P21i^2*P22j*P31j*Q11*Q12 + P21i^2*P21j*P32j*Q11*Q12 + 2*P21i*P22i*P22j*P31j*Q12^2 + 2*P21i*P21j*P22i*P32j*Q12^2 + 2*P21i*P21j*P23i*P31j*Q11*Q13 + P21i^2*P23j*P31j*Q11*Q13 + P21i^2*P21j*P33j*Q11*Q13 + 2*P21i*P22j*P23i*P31j*Q12*Q13 + 2*P21i*P22i*P23j*P31j*Q12*Q13 + 2*P21i*P21j*P23i*P32j*Q12*Q13 + 2*P21i*P21j*P22i*P33j*Q12*Q13 + 2*P21i*P23i*P23j*P31j*Q13^2 + 2*P21i*P21j*P23i*P33j*Q13^2 + 2*P21i*P21j*P24i*P31j*Q11*Q14 + P21i^2*P24j*P31j*Q11*Q14 + P21i^2*P21j*P34j*Q11*Q14 + 2*P21i*P22j*P24i*P31j*Q12*Q14 + 2*P21i*P22i*P24j*P31j*Q12*Q14 + 2*P21i*P21j*P24i*P32j*Q12*Q14 + 2*P21i*P21j*P22i*P34j*Q12*Q14 + 2*P21i*P23j*P24i*P31j*Q13*Q14 + 2*P21i*P23i*P24j*P31j*Q13*Q14 + 2*P21i*P21j*P24i*P33j*Q13*Q14 + 2*P21i*P21j*P23i*P34j*Q13*Q14 + 2*P21i*P24i*P24j*P31j*Q14^2 + 2*P21i*P21j*P24i*P34j*Q14^2 + P21j*P22i^2*P31j*Q11*Q22 + P21i^2*P22j*P32j*Q11*Q22 + P22i^2*P22j*P31j*Q12*Q22 + P21j*P22i^2*P32j*Q12*Q22 + 2*P21i*P22i*P22j*P32j*Q12*Q22 + P22i^2*P23j*P31j*Q13*Q22 + 2*P21i*P22j*P23i*P32j*Q13*Q22 + P21j*P22i^2*P33j*Q13*Q22 + P22i^2*P24j*P31j*Q14*Q22 + 2*P21i*P22j*P24i*P32j*Q14*Q22 + P21j*P22i^2*P34j*Q14*Q22 + P22i^2*P22j*P32j*Q22^2 + 2*P21j*P22i*P23i*P31j*Q11*Q23 + P21i^2*P23j*P32j*Q11*Q23 + P21i^2*P22j*P33j*Q11*Q23 + 2*P22i*P22j*P23i*P31j*Q12*Q23 + 2*P21j*P22i*P23i*P32j*Q12*Q23 + 2*P21i*P22i*P23j*P32j*Q12*Q23 + 2*P21i*P22i*P22j*P33j*Q12*Q23 + 2*P22i*P23i*P23j*P31j*Q13*Q23 + 2*P21i*P23i*P23j*P32j*Q13*Q23 + 2*P21j*P22i*P23i*P33j*Q13*Q23 + 2*P21i*P22j*P23i*P33j*Q13*Q23 + 2*P22i*P23i*P24j*P31j*Q14*Q23 + 2*P21i*P23j*P24i*P32j*Q14*Q23 + 2*P21i*P22j*P24i*P33j*Q14*Q23 + 2*P21j*P22i*P23i*P34j*Q14*Q23 + 2*P22i*P22j*P23i*P32j*Q22*Q23 + P22i^2*P23j*P32j*Q22*Q23 + P22i^2*P22j*P33j*Q22*Q23 + 2*P22i*P23i*P23j*P32j*Q23^2 + 2*P22i*P22j*P23i*P33j*Q23^2 + 2*P21j*P22i*P24i*P31j*Q11*Q24 + P21i^2*P24j*P32j*Q11*Q24 + P21i^2*P22j*P34j*Q11*Q24 + 2*P22i*P22j*P24i*P31j*Q12*Q24 + 2*P21j*P22i*P24i*P32j*Q12*Q24 + 2*P21i*P22i*P24j*P32j*Q12*Q24 + 2*P21i*P22i*P22j*P34j*Q12*Q24 + 2*P22i*P23j*P24i*P31j*Q13*Q24 + 2*P21i*P23i*P24j*P32j*Q13*Q24 + 2*P21j*P22i*P24i*P33j*Q13*Q24 + 2*P21i*P22j*P23i*P34j*Q13*Q24 + 2*P22i*P24i*P24j*P31j*Q14*Q24 + 2*P21i*P24i*P24j*P32j*Q14*Q24 + 2*P21j*P22i*P24i*P34j*Q14*Q24 + 2*P21i*P22j*P24i*P34j*Q14*Q24 + 2*P22i*P22j*P24i*P32j*Q22*Q24 + P22i^2*P24j*P32j*Q22*Q24 + P22i^2*P22j*P34j*Q22*Q24 + 2*P22i*P23j*P24i*P32j*Q23*Q24 + 2*P22i*P23i*P24j*P32j*Q23*Q24 + 2*P22i*P22j*P24i*P33j*Q23*Q24 + 2*P22i*P22j*P23i*P34j*Q23*Q24 + 2*P22i*P24i*P24j*P32j*Q24^2 + 2*P22i*P22j*P24i*P34j*Q24^2 + P21j*P23i^2*P31j*Q11*Q33 + P21i^2*P23j*P33j*Q11*Q33 + P22j*P23i^2*P31j*Q12*Q33 + P21j*P23i^2*P32j*Q12*Q33 + 2*P21i*P22i*P23j*P33j*Q12*Q33 + P23i^2*P23j*P31j*Q13*Q33 + P21j*P23i^2*P33j*Q13*Q33 + 2*P21i*P23i*P23j*P33j*Q13*Q33 + P23i^2*P24j*P31j*Q14*Q33 + 2*P21i*P23j*P24i*P33j*Q14*Q33 + P21j*P23i^2*P34j*Q14*Q33 + P22j*P23i^2*P32j*Q22*Q33 + P22i^2*P23j*P33j*Q22*Q33 + P23i^2*P23j*P32j*Q23*Q33 + P22j*P23i^2*P33j*Q23*Q33 + 2*P22i*P23i*P23j*P33j*Q23*Q33 + P23i^2*P24j*P32j*Q24*Q33 + 2*P22i*P23j*P24i*P33j*Q24*Q33 + P22j*P23i^2*P34j*Q24*Q33 + P23i^2*P23j*P33j*Q33^2 + 2*P21j*P23i*P24i*P31j*Q11*Q34 + P21i^2*P24j*P33j*Q11*Q34 + P21i^2*P23j*P34j*Q11*Q34 + 2*P22j*P23i*P24i*P31j*Q12*Q34 + 2*P21j*P23i*P24i*P32j*Q12*Q34 + 2*P21i*P22i*P24j*P33j*Q12*Q34 + 2*P21i*P22i*P23j*P34j*Q12*Q34 + 2*P23i*P23j*P24i*P31j*Q13*Q34 + 2*P21j*P23i*P24i*P33j*Q13*Q34 + 2*P21i*P23i*P24j*P33j*Q13*Q34 + 2*P21i*P23i*P23j*P34j*Q13*Q34 + 2*P23i*P24i*P24j*P31j*Q14*Q34 + 2*P21i*P24i*P24j*P33j*Q14*Q34 + 2*P21j*P23i*P24i*P34j*Q14*Q34 + 2*P21i*P23j*P24i*P34j*Q14*Q34 + 2*P22j*P23i*P24i*P32j*Q22*Q34 + P22i^2*P24j*P33j*Q22*Q34 + P22i^2*P23j*P34j*Q22*Q34 + 2*P23i*P23j*P24i*P32j*Q23*Q34 + 2*P22j*P23i*P24i*P33j*Q23*Q34 + 2*P22i*P23i*P24j*P33j*Q23*Q34 + 2*P22i*P23i*P23j*P34j*Q23*Q34 + 2*P23i*P24i*P24j*P32j*Q24*Q34 + 2*P22i*P24i*P24j*P33j*Q24*Q34 + 2*P22j*P23i*P24i*P34j*Q24*Q34 + 2*P22i*P23j*P24i*P34j*Q24*Q34 + 2*P23i*P23j*P24i*P33j*Q33*Q34 + P23i^2*P24j*P33j*Q33*Q34 + P23i^2*P23j*P34j*Q33*Q34 + 2*P23i*P24i*P24j*P33j*Q34^2 + 2*P23i*P23j*P24i*P34j*Q34^2 + P21j*P24i^2*P31j*Q11*Q44 + P21i^2*P24j*P34j*Q11*Q44 + P22j*P24i^2*P31j*Q12*Q44 + P21j*P24i^2*P32j*Q12*Q44 + 2*P21i*P22i*P24j*P34j*Q12*Q44 + P23j*P24i^2*P31j*Q13*Q44 + P21j*P24i^2*P33j*Q13*Q44 + 2*P21i*P23i*P24j*P34j*Q13*Q44 + P24i^2*P24j*P31j*Q14*Q44 + P21j*P24i^2*P34j*Q14*Q44 + 2*P21i*P24i*P24j*P34j*Q14*Q44 + P22j*P24i^2*P32j*Q22*Q44 + P22i^2*P24j*P34j*Q22*Q44 + P23j*P24i^2*P32j*Q23*Q44 + P22j*P24i^2*P33j*Q23*Q44 + 2*P22i*P23i*P24j*P34j*Q23*Q44 + P24i^2*P24j*P32j*Q24*Q44 + P22j*P24i^2*P34j*Q24*Q44 + 2*P22i*P24i*P24j*P34j*Q24*Q44 + P23j*P24i^2*P33j*Q33*Q44 + P23i^2*P24j*P34j*Q33*Q44 + P24i^2*P24j*P33j*Q34*Q44 + P23j*P24i^2*P34j*Q34*Q44 + 2*P23i*P24i*P24j*P34j*Q34*Q44 + P24i^2*P24j*P34j*Q44^2"
I12J22 = "P21i*P31i*P31j^2*Q11^2 + P22i*P31i*P31j^2*Q11*Q12 + P21i*P31j^2*P32i*Q11*Q12 + 2*P21i*P31i*P31j*P32j*Q11*Q12 + 2*P22i*P31i*P31j*P32j*Q12^2 + 2*P21i*P31j*P32i*P32j*Q12^2 + P23i*P31i*P31j^2*Q11*Q13 + P21i*P31j^2*P33i*Q11*Q13 + 2*P21i*P31i*P31j*P33j*Q11*Q13 + 2*P23i*P31i*P31j*P32j*Q12*Q13 + 2*P21i*P31j*P32j*P33i*Q12*Q13 + 2*P22i*P31i*P31j*P33j*Q12*Q13 + 2*P21i*P31j*P32i*P33j*Q12*Q13 + 2*P23i*P31i*P31j*P33j*Q13^2 + 2*P21i*P31j*P33i*P33j*Q13^2 + P24i*P31i*P31j^2*Q11*Q14 + P21i*P31j^2*P34i*Q11*Q14 + 2*P21i*P31i*P31j*P34j*Q11*Q14 + 2*P24i*P31i*P31j*P32j*Q12*Q14 + 2*P21i*P31j*P32j*P34i*Q12*Q14 + 2*P22i*P31i*P31j*P34j*Q12*Q14 + 2*P21i*P31j*P32i*P34j*Q12*Q14 + 2*P24i*P31i*P31j*P33j*Q13*Q14 + 2*P21i*P31j*P33j*P34i*Q13*Q14 + 2*P23i*P31i*P31j*P34j*Q13*Q14 + 2*P21i*P31j*P33i*P34j*Q13*Q14 + 2*P24i*P31i*P31j*P34j*Q14^2 + 2*P21i*P31j*P34i*P34j*Q14^2 + P22i*P31j^2*P32i*Q11*Q22 + P21i*P31i*P32j^2*Q11*Q22 + 2*P22i*P31j*P32i*P32j*Q12*Q22 + P22i*P31i*P32j^2*Q12*Q22 + P21i*P32i*P32j^2*Q12*Q22 + P23i*P31i*P32j^2*Q13*Q22 + P21i*P32j^2*P33i*Q13*Q22 + 2*P22i*P31j*P32i*P33j*Q13*Q22 + P24i*P31i*P32j^2*Q14*Q22 + P21i*P32j^2*P34i*Q14*Q22 + 2*P22i*P31j*P32i*P34j*Q14*Q22 + P22i*P32i*P32j^2*Q22^2 + P23i*P31j^2*P32i*Q11*Q23 + P22i*P31j^2*P33i*Q11*Q23 + 2*P21i*P31i*P32j*P33j*Q11*Q23 + 2*P23i*P31j*P32i*P32j*Q12*Q23 + 2*P22i*P31j*P32j*P33i*Q12*Q23 + 2*P22i*P31i*P32j*P33j*Q12*Q23 + 2*P21i*P32i*P32j*P33j*Q12*Q23 + 2*P23i*P31j*P32i*P33j*Q13*Q23 + 2*P23i*P31i*P32j*P33j*Q13*Q23 + 2*P22i*P31j*P33i*P33j*Q13*Q23 + 2*P21i*P32j*P33i*P33j*Q13*Q23 + 2*P24i*P31i*P32j*P33j*Q14*Q23 + 2*P21i*P32j*P33j*P34i*Q14*Q23 + 2*P23i*P31j*P32i*P34j*Q14*Q23 + 2*P22i*P31j*P33i*P34j*Q14*Q23 + P23i*P32i*P32j^2*Q22*Q23 + P22i*P32j^2*P33i*Q22*Q23 + 2*P22i*P32i*P32j*P33j*Q22*Q23 + 2*P23i*P32i*P32j*P33j*Q23^2 + 2*P22i*P32j*P33i*P33j*Q23^2 + P24i*P31j^2*P32i*Q11*Q24 + P22i*P31j^2*P34i*Q11*Q24 + 2*P21i*P31i*P32j*P34j*Q11*Q24 + 2*P24i*P31j*P32i*P32j*Q12*Q24 + 2*P22i*P31j*P32j*P34i*Q12*Q24 + 2*P22i*P31i*P32j*P34j*Q12*Q24 + 2*P21i*P32i*P32j*P34j*Q12*Q24 + 2*P24i*P31j*P32i*P33j*Q13*Q24 + 2*P22i*P31j*P33j*P34i*Q13*Q24 + 2*P23i*P31i*P32j*P34j*Q13*Q24 + 2*P21i*P32j*P33i*P34j*Q13*Q24 + 2*P24i*P31j*P32i*P34j*Q14*Q24 + 2*P24i*P31i*P32j*P34j*Q14*Q24 + 2*P22i*P31j*P34i*P34j*Q14*Q24 + 2*P21i*P32j*P34i*P34j*Q14*Q24 + P24i*P32i*P32j^2*Q22*Q24 + P22i*P32j^2*P34i*Q22*Q24 + 2*P22i*P32i*P32j*P34j*Q22*Q24 + 2*P24i*P32i*P32j*P33j*Q23*Q24 + 2*P22i*P32j*P33j*P34i*Q23*Q24 + 2*P23i*P32i*P32j*P34j*Q23*Q24 + 2*P22i*P32j*P33i*P34j*Q23*Q24 + 2*P24i*P32i*P32j*P34j*Q24^2 + 2*P22i*P32j*P34i*P34j*Q24^2 + P23i*P31j^2*P33i*Q11*Q33 + P21i*P31i*P33j^2*Q11*Q33 + 2*P23i*P31j*P32j*P33i*Q12*Q33 + P22i*P31i*P33j^2*Q12*Q33 + P21i*P32i*P33j^2*Q12*Q33 + 2*P23i*P31j*P33i*P33j*Q13*Q33 + P23i*P31i*P33j^2*Q13*Q33 + P21i*P33i*P33j^2*Q13*Q33 + P24i*P31i*P33j^2*Q14*Q33 + P21i*P33j^2*P34i*Q14*Q33 + 2*P23i*P31j*P33i*P34j*Q14*Q33 + P23i*P32j^2*P33i*Q22*Q33 + P22i*P32i*P33j^2*Q22*Q33 + 2*P23i*P32j*P33i*P33j*Q23*Q33 + P23i*P32i*P33j^2*Q23*Q33 + P22i*P33i*P33j^2*Q23*Q33 + P24i*P32i*P33j^2*Q24*Q33 + P22i*P33j^2*P34i*Q24*Q33 + 2*P23i*P32j*P33i*P34j*Q24*Q33 + P23i*P33i*P33j^2*Q33^2 + P24i*P31j^2*P33i*Q11*Q34 + P23i*P31j^2*P34i*Q11*Q34 + 2*P21i*P31i*P33j*P34j*Q11*Q34 + 2*P24i*P31j*P32j*P33i*Q12*Q34 + 2*P23i*P31j*P32j*P34i*Q12*Q34 + 2*P22i*P31i*P33j*P34j*Q12*Q34 + 2*P21i*P32i*P33j*P34j*Q12*Q34 + 2*P24i*P31j*P33i*P33j*Q13*Q34 + 2*P23i*P31j*P33j*P34i*Q13*Q34 + 2*P23i*P31i*P33j*P34j*Q13*Q34 + 2*P21i*P33i*P33j*P34j*Q13*Q34 + 2*P24i*P31j*P33i*P34j*Q14*Q34 + 2*P24i*P31i*P33j*P34j*Q14*Q34 + 2*P23i*P31j*P34i*P34j*Q14*Q34 + 2*P21i*P33j*P34i*P34j*Q14*Q34 + P24i*P32j^2*P33i*Q22*Q34 + P23i*P32j^2*P34i*Q22*Q34 + 2*P22i*P32i*P33j*P34j*Q22*Q34 + 2*P24i*P32j*P33i*P33j*Q23*Q34 + 2*P23i*P32j*P33j*P34i*Q23*Q34 + 2*P23i*P32i*P33j*P34j*Q23*Q34 + 2*P22i*P33i*P33j*P34j*Q23*Q34 + 2*P24i*P32j*P33i*P34j*Q24*Q34 + 2*P24i*P32i*P33j*P34j*Q24*Q34 + 2*P23i*P32j*P34i*P34j*Q24*Q34 + 2*P22i*P33j*P34i*P34j*Q24*Q34 + P24i*P33i*P33j^2*Q33*Q34 + P23i*P33j^2*P34i*Q33*Q34 + 2*P23i*P33i*P33j*P34j*Q33*Q34 + 2*P24i*P33i*P33j*P34j*Q34^2 + 2*P23i*P33j*P34i*P34j*Q34^2 + P24i*P31j^2*P34i*Q11*Q44 + P21i*P31i*P34j^2*Q11*Q44 + 2*P24i*P31j*P32j*P34i*Q12*Q44 + P22i*P31i*P34j^2*Q12*Q44 + P21i*P32i*P34j^2*Q12*Q44 + 2*P24i*P31j*P33j*P34i*Q13*Q44 + P23i*P31i*P34j^2*Q13*Q44 + P21i*P33i*P34j^2*Q13*Q44 + 2*P24i*P31j*P34i*P34j*Q14*Q44 + P24i*P31i*P34j^2*Q14*Q44 + P21i*P34i*P34j^2*Q14*Q44 + P24i*P32j^2*P34i*Q22*Q44 + P22i*P32i*P34j^2*Q22*Q44 + 2*P24i*P32j*P33j*P34i*Q23*Q44 + P23i*P32i*P34j^2*Q23*Q44 + P22i*P33i*P34j^2*Q23*Q44 + 2*P24i*P32j*P34i*P34j*Q24*Q44 + P24i*P32i*P34j^2*Q24*Q44 + P22i*P34i*P34j^2*Q24*Q44 + P24i*P33j^2*P34i*Q33*Q44 + P23i*P33i*P34j^2*Q33*Q44 + 2*P24i*P33j*P34i*P34j*Q34*Q44 + P24i*P33i*P34j^2*Q34*Q44 + P23i*P34i*P34j^2*Q34*Q44 + P24i*P34i*P34j^2*Q44^2"

print_matrix10(I12J22)

